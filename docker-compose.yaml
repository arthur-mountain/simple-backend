version: "3.8"

x-common:
  &common
  networks:
    - backend-network
  restart: unless-stopped
  stdin_open: true
  tty: true

services:
  my-app:
    image: ${BACKEND_IMAGE}
    container_name: ${BACKEND_NAME}
    working_dir: /app
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    env_file:
      - .env
      # - config/dev/rebbitmq.env
      - config/dev/cache.env
      - config/dev/database.env
      - config/dev/backend.env
    volumes:
      - .:/app
    depends_on:
      - my-database
      - my-cache
      # - rebbit
    <<: *common

  my-database:
    image: ${DATABASE_IMAGE}
    container_name: ${DATABASE_NAME}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./migration/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - config/dev/database.env
    <<: *common

  my-cache:
    image: ${CACHE_DATABASE_IMAGE}
    container_name: ${CACHE_DATABASE_NAME}
    ports:
      - ${CACHE_DATABASE_PORT}:${CACHE_DATABASE_PORT}
    env_file:
      - config/dev/cache.env
    <<: *common
  # rebbit:
  #   image: ${MESSAGE_QUEUE_IMAGE}
  #   container_name: ${MESSAGE_QUEUE_NAME}
  #   ports:
  #     - ${MESSAGE_QUEUE_PORT}:${MESSAGE_QUEUE_PORT}
  #     - ${MESSAGE_QUEUE_ADMIN_PORT}:${MESSAGE_QUEUE_ADMIN_PORT}
  #   env_file:
  #     - config/dev/rebbitmq.env
  #   <<: *common

networks:
  backend-network:
